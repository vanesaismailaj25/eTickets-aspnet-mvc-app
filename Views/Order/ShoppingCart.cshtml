@model ShoppingCartVM
@using eTickets.Data.ViewModels;
@{
    ViewData["Title"] = "Shopping cart summary";
}

<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">
            <h2> Your shopping cart summary </h2>
        </div>
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Selected amount</th>
                <th>Movie</th>
                <th>Price</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
            {
                <tr>
                    <td class="align-middle"> @item.Amount</td>
                    <td class="align-middle"> @item.Movie.Name</td>
                    <td class="align-middle"> @item.Movie.Price.ToString("c")</td>
                    <td class="align-middle"> @((item.Amount * item.Movie.Price).ToString("c")) </td>
                    <td class="align-middle">
                        <a class="text-danger" asp-controller="Order" asp-action="RemoveItemFromShoppingCart" asp-route-id="@item.Movie.Id">
                            <i class="bi bi-cart-dash"></i>
                        </a>
                        <a class="text-success" asp-controller="Order" asp-action="AddItemToShoppingCart" asp-route-id="@item.Movie.Id">
                            <i class="bi bi-cart-plus"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="2"></td>
                <td><b>Total:</b></td>
                <td>
                    @Model.ShoppingCartTotal.ToString("c")
                </td>
                <td></td>
            </tr>
        </tfoot>
    </table>

    <div class="text-center">
        <div class="btn-group">
            @* <a class="btn btn-outline-primary" asp-controller="Order" asp-action="CompleteOrder">
            Complete order
            </a> *@
            <div id="paypal-btn"></div>
            <span style="padding: 5px">
            </span>
            <a class="btn btn-outline-success" asp-controller="Movie" asp-action="Movie">
                Add more items
            </a>
        </div>
    </div>

</div>

@section Scripts {

    <script src="https://www.paypalobjects.com/api/checkout/js">
    </script>


    <script>
        //here we are going to get the value for the total amount from the model with the help of a HTML function
        let _total = @Html.Raw(Model.ShoppingCartTotal);



        // here inside we are going to define all of the Button properties
        // this is the Object we are going to work with ( Button )
        paypal.Button.render({
            //configure first the environment, which in this case is the sandbox of paypal
            env: 'sandbox',
            //the client is basically the app that we created at paypal
            client: {
                //here we are going to configure the sandbox by copying the Client ID value
                sandbox: ''
            },

            //customize the button and for it we are going to define the lockout, how we want the button to appear, the language we want it to be displayed and the style
            locale: 'en_US',
            style: {
                size: 'small',
                color: 'gold',
                shape: 'pill'
            },
            //if we want to enable the paynow checkout flow,we can add the below line
            commit: true,
            //set up the payment
            payment: function (data, actions) {
                //a payment in paypal is just an transaction,so for that we are just going to define the transaction property
                return actions.payment.create({
                    transactions: [{
                        amount: {
                            total: _total,
                            currency: 'USD'
                        }
                    }]
                });
            },

            //execute the payment
            payment: function (data, actions) {
                return actions.payment.execute().then(function () {
                    var url = '@Url.Action("CompleteOrder", "Order", new { })';
                    window.location.href = url;
                });
            }
        }, '#paypal-btn');
    </script>
}